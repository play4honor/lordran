# This workflow will build and push a new container image to Amazon ECR,
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of `ECR_REPOSITORY` in the workflow below with your repository's name.
#    Replace the value of `aws-region` in the workflow below with your repository's region.
#
# 4. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.

on:
  push:
    branches:
      - main

name: Deploy to Amazon ECS

jobs:
  ecr_public:
    runs-on: ubuntu-latest
    name: ECR public action
    steps:
      - name: Get short SHA
        id: sha
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Build and Push Solaire to ECR public
        id: build-and-push-solaire
        uses: pahud/ecr-public-action@8cd826db40befb59b0cd0b60b22a7ba72d06a7f7
        with:
          dockerfile: bot/Dockerfile
          create_repo: solaire
          tags: |
            public.ecr.aws/o4s5x0l8/solaire:latest
            public.ecr.aws/o4s5x0l8/solaire:${{ steps.sha.outputs.sha7 }}
      - name: Build and Push Quelaag to ECR public
        id: build-and-push-quelaag
        uses: pahud/ecr-public-action@8cd826db40befb59b0cd0b60b22a7ba72d06a7f7
        with:
          dockerfile: backend/Dockerfile
          create_repo: quelaag
          tags: |
            public.ecr.aws/o4s5x0l8/quelaag:latest
            public.ecr.aws/o4s5x0l8/quelaag:${{ steps.sha.outputs.sha7 }}
